var dbAccess = require('dbAccess');
var url = require('url');
var g_UserId = -1; //User ID
var g_UserVote; //Whether Thumbs Up or Thumbs Down

var ViewIssue = exports.ViewIssue = function() {
};

/**
 * Send the HTML page to the client
 * @param response Response object to send the data
 * @param issue Issue to display
 */
function displayPage(response, issue, id) {
	return function(error, users)
	{
		var user = users[0];
		
		g_UserVote = -1; //Assume that the user hasn't voted initially
		
		//Check if the user has already voted
		var sqlAlreadyVoted = "SELECT * FROM votes WHERE user_id = " + g_UserId	 + " AND issue_id = " + issue['id'];
		
		dbAccess.runQuery(sqlAlreadyVoted, function(error, rows_vote)
		{			
			if (error) throw error;
			
			if (rows_vote.length == 1)
			{
				g_UserVote = rows_vote[0]['vote'];	
			}
			
			response.write('<head>');
			response.write('<meta http-equiv="Content-Type" content="text/html" charset="utf-8"/>');
			response.write('<link rel="stylesheet" href="css/style.css" type="text/css" />');
			response.write('<title>CivicConnect</title>');
			response.write('<script src="jquery.js" type="text/javascript"></script>');
			response.write('</head>');
			response.write('<body>');
			response.write('<div id="page">');
			response.write('<div id="header"><a href="#">join</a> | <a href="#">login</a></div>');
			response.write('<div id="menu">');
			response.write('<ul>');
			response.write('<li><a href="index.html">Home</a></li>');
			response.write('<li><a href="about.html">About</a></li>');
			response.write('</ul>');
			response.write('</div>');
			response.write('<div id="quick-task-bar">');
			response.write('<a href="editIssue?id='+id+'" id="add-issue-button">Edit Issue</a>');
      response.write('<form id="search-form" action="searchIssue">');
			response.write('<input type="text" id="search-box" name="search" value="" />');
			response.write('<input type="submit" id="search-button" value="Search" />');
			response.write('</form>');
			response.write('</div>');
			response.write('<div id="content">');
			response.write('<h1>' + issue['title'] + '</h1>');
			response.write('Created on ' + issue['created']);
			if (user!=undefined)
				response.write('by	<a href="/viewProfile?id='+issue['user_id']+ '" id="user_profile">' +user['name']+ '</a> <br />');
			else response.write('<br />');
					response.write('Status: ' + issue['status']+'<br/>');
			response.write('Location: ' + issue['location']);
			response.write('<h3>Description</h3>');
			response.write('<p>'+issue['description'] + '</p>');
			response.write('<p>More information: <a href="' + issue['link'] + '"> here </a></p>');
			if (g_UserId==-1)
			{
				response.write("<p><em><a href='/signin'>Sign in</a> to vote on issues.</em></p>")
			}
			else
			{
			    response.write('<br><a href="" onclick="$.get(\'followIssue\', {id : ' + issue['id'] +'}); return false;">Follow This Issue</a>');
                if (g_UserVote == -1)
                {
                    response.write('<p><table style="width: 100%"><tr> <td style="width: 31px"><a href="/voteIssues?issueid=' + issue['id'] +	'&vote=0"><img src="images/thumb_up.png"></a></td>');
                    response.write('<td style="width: 49px">Like</td><td style="width: 31px"><a href="/voteIssues?issueid=' + issue['id'] +	 '&vote=1"><img src="images/thumb_down.png"></a></td>');
                    response.write('<td>Unlike</td></tr></table></p>'); 
                }
                else if (g_UserVote == 0)
                {
                    response.write('<p><i>You Liked this Issue<i></i>');
                }
                else 
                {
                    response.write('<p><i>You Disliked this Issue</i></i>');
                }
			}
		
			response.write('</div> <div id="footer"><p>&copy; 2011 University of Calgary. All rights reserved.</p></div></div></body> </html>');
			response.end();
		}); 
	};
}

/**
 * Retrieve the user corresponding to the issue
 * @param response Response object to send the data
 */
function findUser(response,id) {
		return function(error, issue) {
				if (error) throw error;

		dbAccess.runQuery('SELECT * FROM users WHERE id=' + issue[0]['user_id'], displayPage(response, issue[0], id));

	};
}

/**
 * Main function of the module
 * @param request Incoming request
 * @param response Response object to send the data
 */
ViewIssue.display = function(request, response) {
	var parsedURL = url.parse(request.url, true);
		
	// get logged-in user
	request.getUser(function(error, user){
		if(error) throw error;
		if (user)	g_UserId = user.id;
		var sqlQuery = 'SELECT * FROM issues WHERE id=' + parsedURL.query.id;
		dbAccess.runQuery(sqlQuery, findUser(response,parsedURL.query.id));
	});
};
